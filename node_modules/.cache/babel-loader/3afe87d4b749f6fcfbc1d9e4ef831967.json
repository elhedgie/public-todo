{"ast":null,"code":"var _jsxFileName = \"/Users/tabaqqui/Desktop/reactapp/public-todo/src/components/ToDoItem.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { DeleteBtn } from \"./DeleteBtn/DeleteBtn\";\nimport './main.css';\nimport ToDoForm from \"./ToDoForm\";\nimport ToDoList from \"./ToDoList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ToDoItem(props) {\n  _s();\n\n  const [openState, setOpenState] = useState(false);\n  const [checkedState, setCheckedState] = useState(false);\n  const [arrowState, setArrowState] = useState(false);\n\n  function doneMaker() {\n    setOpenState(!openState);\n    setArrowState(!arrowState);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"item-wrap\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrap-todo\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"item-label\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: () => {\n            setCheckedState(!checkedState);\n            props.item.done = !checkedState;\n            localStorage.clear();\n            localStorage.setItem('todo', JSON.stringify(props.anItems));\n          },\n          checked: checkedState,\n          className: \"default-radio\",\n          type: \"checkbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: props.item.done ? \"custom-radio done-radio\" : \"custom-radio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: props.item.done ? \"todo-item done\" : \"todo-item\",\n          children: props.item.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: arrowState ? \"arrow clicked\" : \"arrow\",\n        onClick: doneMaker\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(DeleteBtn, {\n        setItemsState: props.setItemsState,\n        id: props.item.id,\n        anItems: props.anItems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: openState ? 'inner open' : 'inner closed',\n      children: [/*#__PURE__*/_jsxDEV(ToDoForm, {\n        id: props.item.id,\n        itemsSet: props.itemsSet\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(ToDoList, {\n        setItemsState: props.setItemsState,\n        itemsSet: props.itemsSet,\n        anItems: props.anItems,\n        items: props.anItems.filter(el => el.parentId === props.item.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 13\n  }, this);\n}\n\n_s(ToDoItem, \"kJrgZGYbQKNTe+vR+YYjmxSQaRU=\");\n\n_c = ToDoItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDoItem\");","map":{"version":3,"sources":["/Users/tabaqqui/Desktop/reactapp/public-todo/src/components/ToDoItem.jsx"],"names":["React","useState","DeleteBtn","ToDoForm","ToDoList","ToDoItem","props","openState","setOpenState","checkedState","setCheckedState","arrowState","setArrowState","doneMaker","item","done","localStorage","clear","setItem","JSON","stringify","anItems","text","setItemsState","id","itemsSet","filter","el","parentId"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { DeleteBtn } from \"./DeleteBtn/DeleteBtn\";\nimport './main.css'\nimport ToDoForm from \"./ToDoForm\";\nimport ToDoList from \"./ToDoList\";\n\nexport default function ToDoItem(props) {\n    const [openState, setOpenState] = useState(false)\n    const [checkedState, setCheckedState] = useState(false)\n    const [arrowState, setArrowState] = useState(false)\n   \n    function doneMaker() {\n        setOpenState(!openState)\n        setArrowState(!arrowState)\n       \n    }\n    \n        return ( \n            <li className=\"item-wrap\" >\n                <div className=\"wrap-todo\">\n                    <label className=\"item-label\">\n                        \n                        <input \n                        onChange={()=>{setCheckedState(!checkedState); props.item.done=!checkedState\n                            localStorage.clear()\n                            localStorage.setItem('todo', JSON.stringify(props.anItems))}} \n                        checked={checkedState} \n                        className=\"default-radio\" \n                        type=\"checkbox\"/>\n                        <span className={props.item.done ? \"custom-radio done-radio\" : \"custom-radio\" }></span>\n                        <div className={props.item.done ? \"todo-item done\" : \"todo-item\"}>{props.item.text}</div>\n                    </label>\n                        <div \n                        className={arrowState ? \"arrow clicked\" : \"arrow\"} \n                        onClick={doneMaker}>\n                        </div>\n                        <DeleteBtn setItemsState={props.setItemsState} id={props.item.id} anItems={props.anItems}></DeleteBtn>\n                </div>\n                <div className={openState ? 'inner open' : 'inner closed'}>\n                    <ToDoForm id={props.item.id} itemsSet={props.itemsSet}></ToDoForm>\n                    <ToDoList setItemsState={props.setItemsState} itemsSet={props.itemsSet} anItems={props.anItems} items={props.anItems.filter(el=>el.parentId===props.item.id)}>  \n                    </ToDoList>\n                </div>\n            </li>\n        )\n    \n    \n}"]},"metadata":{},"sourceType":"module"}