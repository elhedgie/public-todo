{"ast":null,"code":"var _jsxFileName = \"/Users/tabaqqui/Desktop/reactapp/public-todo/src/components/ToDoContainer/ToDoContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { CleanAllBtn } from \"../CleanAllBtn/CleanAllBtn.jsx\";\nimport ToDoForm from \"../ToDoForm\";\nimport ToDoList from \"../ToDoList/ToDoList.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ToDoContainer() {\n  _s();\n\n  let localSt = localStorage.getItem('todo');\n  const [itemsState, setItemsState] = useState(localSt ? JSON.parse(localSt) : []);\n  useEffect(() => localStorage.setItem('todo', JSON.stringify(itemsState)));\n\n  function itemsSet(value) {\n    setItemsState([...itemsState, value]);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(ToDoForm, {\n      itemsSet: itemsSet\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ToDoList, {\n      setItemsState: setItemsState,\n      itemsSet: itemsSet,\n      anItems: itemsState,\n      items: itemsState.filter(el => el.parentId === null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CleanAllBtn, {\n      setItemsState: setItemsState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ToDoContainer, \"94UPSSx1k/7ij3tMln6rFy24ZLI=\");\n\n_c = ToDoContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDoContainer\");","map":{"version":3,"sources":["/Users/tabaqqui/Desktop/reactapp/public-todo/src/components/ToDoContainer/ToDoContainer.jsx"],"names":["React","useState","useEffect","CleanAllBtn","ToDoForm","ToDoList","ToDoContainer","localSt","localStorage","getItem","itemsState","setItemsState","JSON","parse","setItem","stringify","itemsSet","value","filter","el","parentId"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,QAA4B,gCAA5B;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,QAAP,MAAqB,0BAArB;;AAEA,eAAe,SAASC,aAAT,GAAyB;AAAA;;AACpC,MAAIC,OAAO,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAd;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAACM,OAAO,GAAGK,IAAI,CAACC,KAAL,CAAWN,OAAX,CAAH,GAAuB,EAA/B,CAA5C;AACAL,EAAAA,SAAS,CAAC,MAAIM,YAAY,CAACM,OAAb,CAAqB,MAArB,EAA6BF,IAAI,CAACG,SAAL,CAAeL,UAAf,CAA7B,CAAL,CAAT;;AAKA,WAASM,QAAT,CAAkBC,KAAlB,EAAyB;AACrBN,IAAAA,aAAa,CAAC,CAAC,GAAGD,UAAJ,EAAgBO,KAAhB,CAAD,CAAb;AACH;;AACD,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACI,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAED;AAApB;AAAA;AAAA;AAAA;AAAA,YADJ,eAGI,QAAC,QAAD;AAAU,MAAA,aAAa,EAAEL,aAAzB;AAAwC,MAAA,QAAQ,EAAEK,QAAlD;AAA4D,MAAA,OAAO,EAAEN,UAArE;AAAiF,MAAA,KAAK,EAAEA,UAAU,CAACQ,MAAX,CAAkBC,EAAE,IAAEA,EAAE,CAACC,QAAH,KAAc,IAApC;AAAxF;AAAA;AAAA;AAAA;AAAA,YAHJ,eAKI,QAAC,WAAD;AAAa,MAAA,aAAa,EAAET;AAA5B;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH;;GAxBuBL,a;;KAAAA,a","sourcesContent":["import React, { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { CleanAllBtn } from \"../CleanAllBtn/CleanAllBtn.jsx\";\nimport ToDoForm from \"../ToDoForm\";\nimport ToDoList from \"../ToDoList/ToDoList.jsx\";\n\nexport default function ToDoContainer() {\n    let localSt = localStorage.getItem('todo')\n    const [itemsState, setItemsState] = useState(localSt ? JSON.parse(localSt):[])\n    useEffect(()=>localStorage.setItem('todo', JSON.stringify(itemsState)))\n    \n    \n    \n    \n    function itemsSet(value) {\n        setItemsState([...itemsState, value])\n    }\n    return (\n        <div className=\"container\">\n            <ToDoForm itemsSet={itemsSet}></ToDoForm>\n            \n            <ToDoList setItemsState={setItemsState} itemsSet={itemsSet} anItems={itemsState} items={itemsState.filter(el=>el.parentId===null)}>\n            </ToDoList>\n            <CleanAllBtn setItemsState={setItemsState}></CleanAllBtn>\n        </div>\n    )\n    \n   \n    \n    \n}\n\n"]},"metadata":{},"sourceType":"module"}