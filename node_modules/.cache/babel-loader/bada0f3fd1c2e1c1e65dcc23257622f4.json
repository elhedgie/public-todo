{"ast":null,"code":"var _jsxFileName = \"/Users/tabaqqui/Desktop/react/todo-app/public-todo/src/components/todoInput.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TodoInput(props) {\n  _s();\n\n  const [inputState, setInputState] = useState('');\n  const refInput = useRef(inputState);\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    ref: refInput,\n    className: \"my-input\",\n    type: \"text\",\n    onChange: handler,\n    value: inputState\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n\n  function handler() {\n    setInputState(refInput.current.value);\n    props.changer(refInput.current.value);\n  }\n}\n\n_s(TodoInput, \"ijGpq42N1RKQFOOw4gXvDrptojk=\");\n\n_c = TodoInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoInput\");","map":{"version":3,"sources":["/Users/tabaqqui/Desktop/react/todo-app/public-todo/src/components/todoInput.jsx"],"names":["React","useRef","useState","TodoInput","props","inputState","setInputState","refInput","handler","current","value","changer"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;;AAEA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AACrC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BJ,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAMK,QAAQ,GAAGN,MAAM,CAACI,UAAD,CAAvB;AACA,sBACI;AAAO,IAAA,GAAG,EAAEE,QAAZ;AAAsB,IAAA,SAAS,EAAC,UAAhC;AAA2C,IAAA,IAAI,EAAC,MAAhD;AAAuD,IAAA,QAAQ,EAAEC,OAAjE;AAA0E,IAAA,KAAK,EAAEH;AAAjF;AAAA;AAAA;AAAA;AAAA,UADJ;;AAGA,WAASG,OAAT,GAAmB;AACfF,IAAAA,aAAa,CAACC,QAAQ,CAACE,OAAT,CAAiBC,KAAlB,CAAb;AACAN,IAAAA,KAAK,CAACO,OAAN,CAAcJ,QAAQ,CAACE,OAAT,CAAiBC,KAA/B;AACH;AACJ;;GAVuBP,S;;KAAAA,S","sourcesContent":["import React, { useRef, useState } from \"react\";\n\nexport default function TodoInput(props) {\n    const [inputState, setInputState] = useState('')\n    const refInput = useRef(inputState)\n    return(\n        <input ref={refInput} className=\"my-input\" type=\"text\" onChange={handler} value={inputState}/>\n    )\n    function handler() {\n        setInputState(refInput.current.value)\n        props.changer(refInput.current.value)\n    }\n}"]},"metadata":{},"sourceType":"module"}