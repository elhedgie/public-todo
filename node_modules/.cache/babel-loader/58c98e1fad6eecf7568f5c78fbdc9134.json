{"ast":null,"code":"var _jsxFileName = \"/Users/tabaqqui/Desktop/reactapp/public-todo/src/components/ToDoItem/ToDoItem.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { DeleteBtn } from \"../DeleteBtn/DeleteBtn.jsx\";\nimport ToDoForm from \"../ToDoForm/ToDoForm\";\nimport ToDoList from \"../ToDoList/ToDoList.jsx\";\nimport styles from './ToDoItem.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ToDoItem(props) {\n  _s();\n\n  const [openState, setOpenState] = useState(false);\n  const [checkedState, setCheckedState] = useState(false);\n  const [arrowState, setArrowState] = useState(false);\n  let itemClass;\n  let radioClass;\n  let arrowClass;\n  let openClass;\n\n  function doneMaker() {\n    setOpenState(!openState);\n    setArrowState(!arrowState);\n  }\n\n  if (props.item.done) {\n    radioClass = styles.customRadio + ' ' + styles.doneRadio;\n    itemClass = styles.todoItem + ' ' + styles.done;\n  } else {\n    radioClass = styles.customRadio;\n    itemClass = styles.todoItem;\n  }\n\n  if (arrowState) {\n    arrowClass = styles.arrow + ' ' + styles.clicked;\n  } else {\n    arrowClass = styles.arrow;\n  }\n\n  if (openState) {\n    openClass = styles.inner + ' ' + styles.open;\n  } else {\n    openClass = styles.inner + ' ' + styles.closed;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: styles.itemWrap,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.wrapTodo,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: styles.itemLabel,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: () => {\n            setCheckedState(!checkedState);\n            props.item.done = !checkedState;\n            localStorage.clear();\n            localStorage.setItem('todo', JSON.stringify(props.anItems));\n          },\n          checked: checkedState,\n          className: styles.defaultRadio,\n          type: \"checkbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: radioClass\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: itemClass,\n          children: props.item.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: arrowClass,\n        onClick: doneMaker\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(DeleteBtn, {\n        setItemsState: props.setItemsState,\n        id: props.item.id,\n        anItems: props.anItems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: openClass,\n      children: [/*#__PURE__*/_jsxDEV(ToDoForm, {\n        id: props.item.id,\n        itemsSet: props.itemsSet\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(ToDoList, {\n        setItemsState: props.setItemsState,\n        itemsSet: props.itemsSet,\n        anItems: props.anItems,\n        items: props.anItems.filter(el => el.parentId === props.item.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 13\n  }, this);\n}\n\n_s(ToDoItem, \"kJrgZGYbQKNTe+vR+YYjmxSQaRU=\");\n\n_c = ToDoItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDoItem\");","map":{"version":3,"sources":["/Users/tabaqqui/Desktop/reactapp/public-todo/src/components/ToDoItem/ToDoItem.jsx"],"names":["React","useState","DeleteBtn","ToDoForm","ToDoList","styles","ToDoItem","props","openState","setOpenState","checkedState","setCheckedState","arrowState","setArrowState","itemClass","radioClass","arrowClass","openClass","doneMaker","item","done","customRadio","doneRadio","todoItem","arrow","clicked","inner","open","closed","itemWrap","wrapTodo","itemLabel","localStorage","clear","setItem","JSON","stringify","anItems","defaultRadio","text","setItemsState","id","itemsSet","filter","el","parentId"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { DeleteBtn } from \"../DeleteBtn/DeleteBtn.jsx\";\nimport ToDoForm from \"../ToDoForm/ToDoForm\";\nimport ToDoList from \"../ToDoList/ToDoList.jsx\";\nimport styles from './ToDoItem.module.css'\n\nexport default function ToDoItem(props) {\n    const [openState, setOpenState] = useState(false)\n    const [checkedState, setCheckedState] = useState(false)\n    const [arrowState, setArrowState] = useState(false)\n    let itemClass\n    let radioClass\n    let arrowClass\n    let openClass\n    function doneMaker() {\n        setOpenState(!openState)\n        setArrowState(!arrowState)\n       \n    }\n    if(props.item.done) {\n        radioClass = styles.customRadio + ' ' + styles.doneRadio\n        itemClass = styles.todoItem + ' ' + styles.done\n\n    }\n    else {\n        radioClass = styles.customRadio\n        itemClass = styles.todoItem\n    }\n    if(arrowState) {\n        arrowClass = styles.arrow + ' ' + styles.clicked\n    }\n    else {\n        arrowClass = styles.arrow\n    }\n    if(openState) {\n        openClass = styles.inner + ' ' + styles.open\n    } else {\n        openClass = styles.inner + ' ' + styles.closed\n\n    }\n        return ( \n            <li className={styles.itemWrap} >\n                <div className={styles.wrapTodo}>\n                    <label className={styles.itemLabel}>\n                        \n                        <input \n                        onChange={()=>{setCheckedState(!checkedState); props.item.done=!checkedState\n                            localStorage.clear()\n                            localStorage.setItem('todo', JSON.stringify(props.anItems))}} \n                        checked={checkedState} \n                        className={styles.defaultRadio} \n                        type=\"checkbox\"/>\n                        <span className={radioClass}></span>\n                        <div className={itemClass}>{props.item.text}</div>\n                    </label>\n                        <div \n                        className={arrowClass} \n                        onClick={doneMaker}>\n                        </div>\n                        <DeleteBtn setItemsState={props.setItemsState} id={props.item.id} anItems={props.anItems}></DeleteBtn>\n                </div>\n                <div className={openClass}>\n                    <ToDoForm id={props.item.id} itemsSet={props.itemsSet}></ToDoForm>\n                    <ToDoList setItemsState={props.setItemsState} itemsSet={props.itemsSet} anItems={props.anItems} items={props.anItems.filter(el=>el.parentId===props.item.id)}>  \n                    </ToDoList>\n                </div>\n            </li>\n        )\n    \n    \n}"]},"metadata":{},"sourceType":"module"}